// <auto-generated />
using System;
using FinanceManagerAPI.Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FinanceManagerAPI.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FinanceManagerAPI.Database.Models.AutomaticTransactions", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("PotId")
                        .HasColumnType("integer")
                        .HasColumnName("potId");

                    b.HasKey("Name");

                    b.ToTable("AutomaticTransactions");
                });

            modelBuilder.Entity("FinanceManagerAPI.Database.Models.Config", b =>
                {
                    b.Property<string>("ConfigName")
                        .HasColumnType("text")
                        .HasColumnName("configName");

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("accessToken");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("accountID");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("clientID");

                    b.Property<string>("ClientSecret")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("clientSecret");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("refreshToken");

                    b.HasKey("ConfigName");

                    b.ToTable("Config");

                    b.HasData(
                        new
                        {
                            ConfigName = "Main",
                            AccessToken = "",
                            AccountId = "",
                            ClientId = "",
                            ClientSecret = "",
                            RefreshToken = ""
                        });
                });

            modelBuilder.Entity("FinanceManagerAPI.Database.Models.Pots", b =>
                {
                    b.Property<int>("PotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("potId");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PotId"));

                    b.Property<decimal>("AmountAllocated")
                        .HasColumnType("numeric")
                        .HasColumnName("amountAllocated");

                    b.Property<decimal>("AmountLeftThisMonth")
                        .HasColumnType("numeric")
                        .HasColumnName("amountLeftThisMonth");

                    b.Property<string>("PotName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("potName");

                    b.HasKey("PotId");

                    b.ToTable("Pots");

                    b.HasData(
                        new
                        {
                            PotId = 1,
                            AmountAllocated = 0m,
                            AmountLeftThisMonth = 0m,
                            PotName = "Unallocated"
                        });
                });

            modelBuilder.Entity("FinanceManagerAPI.Database.Models.Transactions", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("imgUrl");

                    b.Property<string>("MerchantName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("merchantName");

                    b.Property<long>("PotId")
                        .HasColumnType("bigint")
                        .HasColumnName("potId");

                    b.Property<bool>("Processed")
                        .HasColumnType("boolean")
                        .HasColumnName("processed");

                    b.Property<decimal>("TransactionAmount")
                        .HasColumnType("numeric")
                        .HasColumnName("transactionAmount");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("transactionDate");

                    b.HasKey("Id");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = "abc123",
                            ImgUrl = "https://mondo-logo-cache.appspot.com/twitter/@Morrisons/?size=large','2022-08-31",
                            MerchantName = "Morrisons",
                            PotId = 0L,
                            Processed = false,
                            TransactionAmount = 5.44m,
                            TransactionDate = new DateTime(2022, 9, 2, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = "abc1234",
                            ImgUrl = "https://mondo-logo-cache.appspot.com/twitter/@Morrisons/?size=large','2022-08-31",
                            MerchantName = "Greggs",
                            PotId = 0L,
                            Processed = false,
                            TransactionAmount = 2.44m,
                            TransactionDate = new DateTime(2022, 9, 1, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = "abc1235",
                            ImgUrl = "https://mondo-logo-cache.appspot.com/twitter/@Morrisons/?size=large','2022-08-31",
                            MerchantName = "Sainsburys",
                            PotId = 0L,
                            Processed = false,
                            TransactionAmount = 44.44m,
                            TransactionDate = new DateTime(2022, 8, 31, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
