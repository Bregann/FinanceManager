// <auto-generated />
using System;
using FinanceManagerAPI.Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FinanceManagerAPI.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220829180919_UpdateColumnNames")]
    partial class UpdateColumnNames
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FinanceManagerAPI.Database.Models.Pots", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AmountAllocated")
                        .HasColumnType("numeric")
                        .HasColumnName("amountAllocated");

                    b.Property<decimal>("AmountLeftThisMonth")
                        .HasColumnType("numeric")
                        .HasColumnName("amountLeftThisMonth");

                    b.Property<string>("PotName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("potName");

                    b.HasKey("Id");

                    b.ToTable("Pots");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AmountAllocated = 0m,
                            AmountLeftThisMonth = 0m,
                            PotName = "Unallocated"
                        });
                });

            modelBuilder.Entity("FinanceManagerAPI.Database.Models.Transactions", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("imgUrl");

                    b.Property<string>("MerchantName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("merchantName");

                    b.Property<long>("PotId")
                        .HasColumnType("bigint")
                        .HasColumnName("potId");

                    b.Property<bool>("Processed")
                        .HasColumnType("boolean")
                        .HasColumnName("processed");

                    b.Property<decimal>("TransactionAmount")
                        .HasColumnType("numeric")
                        .HasColumnName("transactionAmount");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("transactionDate");

                    b.HasKey("Id");

                    b.ToTable("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
